import{_ as s,c as a,o as i,a4 as e}from"./chunks/framework.C7aiOAIf.js";const u=JSON.parse('{"title":"样式","description":"","frontmatter":{},"headers":[],"relativePath":"guide/design.md","filePath":"guide/design.md","lastUpdated":1711966494000}'),t={name:"guide/design.md"},l=e(`<h1 id="样式" tabindex="-1">样式 <a class="header-anchor" href="#样式" aria-label="Permalink to &quot;样式&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>主要介绍如何在项目中使用和规划样式文件。</p><p>默认使用 <code>less</code> 作为预处理语言，建议在使用前或者遇到疑问时学习一下 <a href="http://lesscss.org/" target="_blank" rel="noreferrer">Less</a> 的相关特性。</p><p>项目中使用的通用样式，都存放于 <a href="https://github.com/syh-micro-build/mb-admin/tree/main/src/styles" target="_blank" rel="noreferrer">src/style/</a> 下面。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.less</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 入口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> theme.less</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 主题相关</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> var.css</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # css变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variables.module.less</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # less变量</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">全局注入</p><p>variables.module.less 这个文件会被全局注入到所有文件，所以在页面内可以直接使用变量而不需要手动引入。</p><p>var.css 则是注入到根元素，所以在每个地方也都能用到。</p></div><h2 id="unocss" tabindex="-1">unocss <a class="header-anchor" href="#unocss" aria-label="Permalink to &quot;unocss&quot;">​</a></h2><p>项目中使用了 <a href="https://github.com/unocss/unocss#readme" target="_blank" rel="noreferrer">unocss</a>，具体参见文件使用说明。</p><p>可能没有用到人会觉得用起来很不习惯，但就个人而言，用起来还是挺香的。减少了很多不必要的麻烦</p><p>语法如下:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;relative w-full h-full px-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,12),n=[l];function h(p,r,d,k,o,c){return i(),a("div",null,n)}const m=s(t,[["render",h]]);export{u as __pageData,m as default};
