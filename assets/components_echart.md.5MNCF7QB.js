import{_ as t,c as a,o as s,a2 as i}from"./chunks/framework.D2XzT7iW.js";const g=JSON.parse('{"title":"Echart 图表组件","description":"","frontmatter":{},"headers":[],"relativePath":"components/echart.md","filePath":"components/echart.md","lastUpdated":1711961284000}'),e={name:"components/echart.md"},h=i(`<h1 id="echart-图表组件" tabindex="-1">Echart 图表组件 <a class="header-anchor" href="#echart-图表组件" aria-label="Permalink to &quot;Echart 图表组件&quot;">​</a></h1><p>对 <code>echarts</code> 进行封装，自适应窗口大小。</p><p>Echart 组件位于 <a href="https://github.com/syh-micro-build/mb-admin/tree/main/src/components/Echart" target="_blank" rel="noreferrer">src/components/Echart</a> 内</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>只需传入对应的 <code>options</code> 和 <code>height</code> 即可展示图表。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Echart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pieOptions</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="echart-属性" tabindex="-1">Echart 属性 <a class="header-anchor" href="#echart-属性" aria-label="Permalink to &quot;Echart 属性&quot;">​</a></h2><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>options</td><td>echart 对应的配置项，<a href="https://echarts.apache.org/zh/option.html#title" target="_blank" rel="noreferrer">详见</a></td><td><code>EChartsOption</code></td><td>-</td><td>[]</td></tr><tr><td>width</td><td>图表宽度</td><td><code>string</code>/<code>number</code></td><td>-</td><td>-</td></tr><tr><td>height</td><td>图表高度</td><td><code>string</code>/<code>number</code></td><td>-</td><td>500</td></tr></tbody></table>`,8),n=[h];function r(d,l,p,o,c,k){return s(),a("div",null,n)}const m=t(e,[["render",r]]);export{g as __pageData,m as default};
